daemon off;
# Heroku dynos have at least 4 cores.
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
	use epoll;
	accept_mutex on;
	worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
	gzip on;
	gzip_comp_level 2;
	gzip_min_length 512;
	gzip_proxied any; # Heroku router sends Via header

	server_tokens off;

	log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
	access_log <%= ENV['NGINX_ACCESS_LOG_PATH'] || 'logs/nginx/access.log' %> l2met;
	error_log <%= ENV['NGINX_ERROR_LOG_PATH'] || 'logs/nginx/error.log' %>;

	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	# Must read the body in 5 seconds.
	client_body_timeout 5;

	upstream app_server {
		server unix:/tmp/nginx.socket fail_timeout=0;
	}

	# MODIFIED BY AT
	server {
		# redirect to subdomain
		server_name grumpyoldmensbookclub.com;
		return 301 $scheme://www.grumpyoldmensbookclub.com$request_uri;
	}
	# END MODIFIED BY AT

	server {
		listen <%= ENV["PORT"] %>;
		# MODIFIED BY AT
		# set server name to help w/ redirect to subdowmain above
		# server_name _;
		server_name www.grumpyoldmensbookclub.com
		# END MODIFIED BY AT
		keepalive_timeout 5;

		location / {
			# MODIFIED BY AT
			# force SSL/redirect http -> https
			if ($http_x_forwarded_proto != "https") {
			  return 301 https://$host$request_uri;
			}
			# END MODIFIED BY AT

			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_redirect off;
			proxy_pass http://app_server;
		}
	}
}
